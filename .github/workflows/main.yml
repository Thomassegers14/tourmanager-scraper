name: Daily script run and push

# Run daily at 16:00 UTC -> corresponds to 18:00 Europe/Brussels during CEST (UTC+2).
# Adjust cron if your period is in winter (CET).
on:
  schedule:
    - cron: '0 16 * * *'   # run daily at 16:00 UTC
  workflow_dispatch:       # optioneel: handmatige trigger

permissions:
  contents: write   # zorg dat GITHUB_TOKEN mag pushen

env:
  # Pas START_DATE aan op de eerste dag (YYYY-MM-DD)
  START_DATE: '2025-08-27'
  DAYS: '18'                     # duur in dagen
  TARGET_FOLDER: 'data/processed'  # map die je naar github wilt committen
  R_SCRIPT: 'R/scripts/process_results.R'    # pad naar jouw script dat moet draaien

jobs:
  run-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check date range (stop if outside 2-week window)
        id: daterange
        run: |
          START=${{ env.START_DATE }}
          DAYS=${{ env.DAYS }}
          # compute END (START + DAYS - 1)
          END=$(date -d "$START + $((DAYS - 1)) days" +%Y-%m-%d)
          NOW=$(date -u +%Y-%m-%d)
          echo "Now (UTC): $NOW"
          echo "Start: $START  End: $END"
          if [[ "$NOW" < "$START" || "$NOW" > "$END" ]]; then
            echo "Outside date range - exiting without running."
            exit 0
          fi
          echo "In date range - continue."

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2'   # of de versie die je gebruikt

      - name: Install R dependencies (if needed)
        run: |
          Rscript -e 'if(!requireNamespace("remotes")) install.packages("remotes")'
          Rscript -e 'pkgs <- c("dplyr","tidyr","glue","readr","rvest"); \
                      to_install <- pkgs[!pkgs %in% installed.packages()[,"Package"]]; \
                      if(length(to_install)) install.packages(to_install)'

      - name: Run your R script
        run: |
          Rscript ${{ env.R_SCRIPT }}
        # als je script faalt wil je dat de job faalt (default). Je kan hier tryCatch in R doen
        # of toevoegen: continue-on-error: true (niet aangeraden)

      - name: Show git status (debug)
        run: |
          git status --porcelain
          git add -A
          git status --porcelain

      - name: Commit & push generated folder
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # add only target folder (veiliger)
          git add ${{ env.TARGET_FOLDER }} || true

          # commit if changes
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Automated update: write ${{ env.TARGET_FOLDER }} (run $GITHUB_RUN_ID)"
            # push (uses the pre-configured GITHUB_TOKEN via actions/checkout)
            git push
          fi

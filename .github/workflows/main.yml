name: Daily script run and push

on:
  schedule:
    # Runs at 6, 15, 16, 19 UTC
    - cron: '0 6,15,16,19 * * *'
  workflow_dispatch:

permissions:
  contents: write

env:
  START_DATE: '2025-08-27'
  DAYS: '18'
  TARGET_FOLDER: 'data/processed'
  R_SCRIPT: 'scripts/process_results.R'

jobs:
  run-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check date range (stop if outside 2-week window)
        id: daterange
        run: |
          START=${{ env.START_DATE }}
          DAYS=${{ env.DAYS }}
          END=$(date -d "$START + $((DAYS - 1)) days" +%Y-%m-%d)
          NOW=$(date -u +%Y-%m-%d)
          if [[ "$NOW" < "$START" || "$NOW" > "$END" ]]; then
            echo "Outside date range - exiting."
            exit 0
          fi

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxml2-dev \
            libcurl4-openssl-dev \
            libssl-dev \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev

      - name: Cache R libraries
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-R-${{ hashFiles('DESCRIPTION') }}
          restore-keys: |
            ${{ runner.os }}-R-

      - name: Install pak
        run: |
          Rscript -e 'install.packages("pak", repos = sprintf(
            "https://r-lib.github.io/p/pak/stable/%s/%s/%s",
            .Platform$pkgType, R.version$os, R.version$arch
          ))'

      - name: Install R dependencies via pak
        run: Rscript -e 'pak::pkg_install("local::.")'

      - name: Run your R script
        run: Rscript ${{ env.R_SCRIPT }}

      - name: Commit & push generated folder
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ env.TARGET_FOLDER }} || true
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Automated update: write ${{ env.TARGET_FOLDER }} (run $GITHUB_RUN_ID)"
            git push
          fi

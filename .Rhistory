View(stage_scores_long)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
library(tidyverse)
library(rvest)
library(tidyverse)
library(rvest)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
# HTML inlezen (kan ook via read_html("url") als je het van een website haalt)
html <- page %>% html_elements(".basic") # vervang door je eigen bestand of url
# --- Eerste tabel: stages ---
stages <- html %>%
html_element(xpath = "//h4[text()='Stages']/following-sibling::table[1]") %>%
html_table(fill = TRUE, header = TRUE) %>%
as.data.frame() %>% select(-2) %>%
as_tibble()
# stage_id uit de <a href>
stage_ids <- html %>%
html_elements(xpath = "//h4[text()='Stages']/following-sibling::table[1]//tbody/tr[not(@class='sum')]/td[3]/a") %>%
html_attr("href")
# Data opschonen
stages <- stages %>%
filter(Date != "") %>%   # laatste somrij verwijderen
mutate(
stage_id    = stage_ids,
stage_nr    = str_extract(`#`, "\\d+"),   # stage nummer eruit halen
date        = Date,
departure   = Departure,
arrival     = Arrival,
distance_km = as.numeric(str_replace(Distance, ",", ".")),
vertical_m  = as.numeric(str_replace(`Vertical meters`, ",", "."))
) %>%
select(stage_id, date, stage_nr, departure, arrival, distance_km, vertical_m)
html %>%
html_element(xpath = "//h4[text()='Stages']/following-sibling::table[1]") %>%
html_table(fill = TRUE, header = TRUE)
library(tidyverse)
library(rvest)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
library(rvest)
library(dplyr)
library(stringr)
html <- read_html("vuelta.html") # vervang door url of bestand
library(tidyverse)
library(rvest)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
# ---- Alle tabellen pakken ----
tables <- html %>% html_elements("table")
# Eerste tabel = stages
stages_df <- tables[[1]] %>%
html_table(fill = TRUE, header = TRUE)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
# ---- Alle tabellen pakken ----
tables <- html %>% html_elements("table")
library(tidyverse)
library(rvest)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
html <- page
# ---- Alle tabellen pakken ----
tables <- html %>% html_elements("table")
# Eerste tabel = stages
stages_df <- tables[[1]] %>%
html_table(fill = TRUE, header = TRUE)
# Lege kolom verwijderen
stages_df <- stages_df[, colnames(stages_df) != ""]
stages <- as_tibble(stages_df)
# Stage_id toevoegen uit href
stage_ids <- tables[[1]] %>%
html_elements("tbody tr td:nth-child(3) a") %>%
html_attr("href")
stages <- stages %>%
filter(Date != "") %>%   # somrij eruit
mutate(
stage_id    = stage_ids,
stage_nr    = str_extract(`#`, "\\d+"),
date        = Date,
departure   = Departure,
arrival     = Arrival,
distance_km = as.numeric(str_replace(Distance, ",", ".")),
vertical_m  = as.numeric(str_replace(`Vertical meters`, ",", "."))
) %>%
select(stage_id, date, stage_nr, departure, arrival, distance_km, vertical_m)
# Tweede tabel = hardest stages
hardest_df <- tables[[2]] %>%
html_table(fill = TRUE, header = TRUE)
hardest_ids <- tables[[2]] %>%
html_elements("tbody tr td:nth-child(2) a") %>%
html_attr("href")
hardest <- hardest_df %>%
mutate(
stage_id = hardest_ids,
profile_score = as.numeric(str_extract(.[[3]], "\\d+"))
) %>%
select(stage_id, profile_score)
tables
stages_df
stages
stages
hardest_df
hardest_ids
hardest <- hardest_df %>%
mutate(
stage_id = hardest_ids,
profile_score = as.numeric(str_extract(.[[3]], "\\d+"))
) %>%
select(stage_id, profile_score)
# Tweede tabel = hardest stages
hardest_df <- tables[[2]] %>%
html_table(fill = TRUE, header = TRUE)
hardest_df
# Tweede tabel = hardest stages
hardest_df <- tables[[2]] %>%
html_table(fill = TRUE, header = c("stage_rank", "stage_name", "profile_score"))
# Tweede tabel = hardest stages
hardest_df <- tables[[2]] %>%
html_table(fill = TRUE, header = F) %>% `colnames<-`(c("stage_rank", "stage_name", "profile_score"))
hardest_df
library(tidyverse)
library(rvest)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
html <- page
# ---- Alle tabellen pakken ----
tables <- html %>% html_elements("table")
# Eerste tabel = stages
stages_df <- tables[[1]] %>%
html_table(fill = TRUE, header = TRUE)
# Lege kolom verwijderen
stages_df <- stages_df[, colnames(stages_df) != ""]
stages <- as_tibble(stages_df)
# Stage_id toevoegen uit href
stage_ids <- tables[[1]] %>%
html_elements("tbody tr td:nth-child(3) a") %>%
html_attr("href")
stages <- stages %>%
filter(Date != "") %>%   # somrij eruit
mutate(
stage_id    = stage_ids,
stage_nr    = str_extract(`#`, "\\d+"),
date        = Date,
departure   = Departure,
arrival     = Arrival,
distance_km = as.numeric(str_replace(Distance, ",", ".")),
vertical_m  = as.numeric(str_replace(`Vertical meters`, ",", "."))
) %>%
select(stage_id, date, stage_nr, departure, arrival, distance_km, vertical_m)
# Tweede tabel = hardest stages
hardest_df <- tables[[2]] %>%
html_table(fill = TRUE, header = F) %>%
`colnames<-`(c("stage_rank", "stage_name", "profile_score"))
hardest_ids <- tables[[2]] %>%
html_elements("tbody tr td:nth-child(2) a") %>%
html_attr("href")
hardest <- hardest_df %>%
mutate(
stage_id = hardest_ids,
profile_score = as.numeric(str_extract(.[[3]], "\\d+"))
) %>%
select(stage_id, profile_score)
hardest_df
# Tweede tabel = hardest stages
hardest_df <- tables[[2]] %>%
html_table(fill = TRUE) %>%
`colnames<-`(c("stage_rank", "stage_name", "profile_score"))
library(tidyverse)
library(rvest)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
html <- page
# ---- Alle tabellen pakken ----
tables <- html %>% html_elements("table")
# Eerste tabel = stages
stages_df <- tables[[1]] %>%
html_table(fill = TRUE, header = TRUE)
# Lege kolom verwijderen
stages_df <- stages_df[, colnames(stages_df) != ""]
stages <- as_tibble(stages_df)
# Stage_id toevoegen uit href
stage_ids <- tables[[1]] %>%
html_elements("tbody tr td:nth-child(3) a") %>%
html_attr("href")
stages <- stages %>%
filter(Date != "") %>%   # somrij eruit
mutate(
stage_id    = stage_ids,
stage_nr    = str_extract(`#`, "\\d+"),
date        = Date,
departure   = Departure,
arrival     = Arrival,
distance_km = as.numeric(str_replace(Distance, ",", ".")),
vertical_m  = as.numeric(str_replace(`Vertical meters`, ",", "."))
) %>%
select(stage_id, date, stage_nr, departure, arrival, distance_km, vertical_m)
# Tweede tabel = hardest stages
hardest_df <- tables[[2]] %>%
html_table(fill = TRUE) %>%
`colnames<-`(c("stage_rank", "stage_name", "profile_score"))
hardest_ids <- tables[[2]] %>%
html_elements("tbody tr td:nth-child(2) a") %>%
html_attr("href")
hardest <- hardest_df %>%
mutate(
stage_id = hardest_ids,
profile_score = as.numeric(str_extract(.[[3]], "\\d+"))
) %>%
select(stage_id, profile_score)
# ---- Joinen ----
result <- stages %>%
left_join(hardest, by = "stage_id") %>%
arrange(as.numeric(stage_nr))
print(result)
View(result)
# Haal de type codes van de etappes op
stageTypeCodes <- tables[[1]] %>%
html_elements(".profile") %>%
html_attr("class") %>%
discard(~ str_detect(.x, " p ")) %>%
str_remove_all("icon profile | mg_rp4") %>%
str_trim()
stageTypeCodes
library(tidyverse)
library(rvest)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
html <- page
# ---- Alle tabellen pakken ----
tables <- html %>% html_elements("table")
# Eerste tabel = stages
stages_df <- tables[[1]] %>%
html_table(fill = TRUE, header = TRUE)
# Lege kolom verwijderen
stages_df <- stages_df[, colnames(stages_df) != ""]
stages <- as_tibble(stages_df)
# Stage_id toevoegen uit href
stage_ids <- tables[[1]] %>%
html_elements("tbody tr td:nth-child(3) a") %>%
html_attr("href")
# Stage types mapping
stageTypes <- data.frame(
stageType = c(" Flat","Hills, flat finish","Hills, uphill finish","Mountains, flat finish","Mountains, uphill finish"),
stageTypeCode = c("p1","p2","p3","p4","p5")
)
# Haal de type codes van de etappes op
stageTypeCodes <- tables[[1]] %>%
html_elements(".profile") %>%
html_attr("class") %>%
discard(~ str_detect(.x, " p ")) %>%
str_remove_all("icon profile | mg_rp4") %>%
str_trim()
stages <- stages %>%
filter(Date != "") %>%   # somrij eruit
mutate(
stage_id    = stage_ids,
stage_nr    = str_extract(`#`, "\\d+"),
date        = Date,
departure   = Departure,
arrival     = Arrival,
stage_type = plyr::mapvalues(stageTypeCodes, stageTypes$stageTypeCode, stageTypes$stageType, warn_missing = FALSE),
distance_km = as.numeric(str_replace(Distance, ",", ".")),
vertical_m  = as.numeric(str_replace(`Vertical meters`, ",", "."))
) %>%
select(stage_id, date, stage_nr, departure, arrival, distance_km, vertical_m)
# Tweede tabel = hardest stages
hardest_df <- tables[[2]] %>%
html_table(fill = TRUE) %>%
`colnames<-`(c("stage_rank", "stage_name", "profile_score"))
hardest_ids <- tables[[2]] %>%
html_elements("tbody tr td:nth-child(2) a") %>%
html_attr("href")
hardest <- hardest_df %>%
mutate(
stage_id = hardest_ids,
profile_score = as.numeric(str_extract(.[[3]], "\\d+"))
) %>%
select(stage_id, profile_score)
# ---- Joinen ----
result <- stages %>%
left_join(hardest, by = "stage_id") %>%
arrange(as.numeric(stage_nr))
print(result)
library(tidyverse)
library(rvest)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
html <- page
# ---- Alle tabellen pakken ----
tables <- html %>% html_elements("table")
# Eerste tabel = stages
stages_df <- tables[[1]] %>%
html_table(fill = TRUE, header = TRUE)
# Lege kolom verwijderen
stages_df <- stages_df[, colnames(stages_df) != ""]
stages <- as_tibble(stages_df)
# Stage_id toevoegen uit href
stage_ids <- tables[[1]] %>%
html_elements("tbody tr td:nth-child(3) a") %>%
html_attr("href")
# Stage types mapping
stageTypes <- data.frame(
stageType = c(" Flat","Hills, flat finish","Hills, uphill finish","Mountains, flat finish","Mountains, uphill finish"),
stageTypeCode = c("p1","p2","p3","p4","p5")
)
# Haal de type codes van de etappes op
stageTypeCodes <- tables[[1]] %>%
html_elements(".profile") %>%
html_attr("class") %>%
discard(~ str_detect(.x, " p ")) %>%
str_remove_all("icon profile | mg_rp4") %>%
str_trim()
stages <- stages %>%
filter(Date != "") %>%   # somrij eruit
mutate(
stage_id    = stage_ids,
stage_nr    = str_extract(`#`, "\\d+"),
date        = Date,
departure   = Departure,
arrival     = Arrival,
stage_type = plyr::mapvalues(stageTypeCodes, stageTypes$stageTypeCode, stageTypes$stageType, warn_missing = FALSE),
distance_km = as.numeric(str_replace(Distance, ",", ".")),
vertical_m  = as.numeric(str_replace(`Vertical meters`, ",", "."))
) %>%
select(stage_id, date, stage_nr, stage_type, departure, arrival, distance_km, vertical_m)
# Tweede tabel = hardest stages
hardest_df <- tables[[2]] %>%
html_table(fill = TRUE) %>%
`colnames<-`(c("stage_rank", "stage_name", "profile_score"))
hardest_ids <- tables[[2]] %>%
html_elements("tbody tr td:nth-child(2) a") %>%
html_attr("href")
hardest <- hardest_df %>%
mutate(
stage_id = hardest_ids,
profile_score = as.numeric(str_extract(.[[3]], "\\d+"))
) %>%
select(stage_id, profile_score)
# ---- Joinen ----
result <- stages %>%
left_join(hardest, by = "stage_id") %>%
arrange(as.numeric(stage_nr))
print(result)
library(tidyverse)
library(rvest)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
html <- page
# ---- Alle tabellen pakken ----
tables <- html %>% html_elements("table")
# Eerste tabel = stages
stages_df <- tables[[1]] %>%
html_table(fill = TRUE, header = TRUE)
# Lege kolom verwijderen
stages_df <- stages_df[, colnames(stages_df) != ""]
stages <- as_tibble(stages_df)
# Stage_id toevoegen uit href
stage_ids <- tables[[1]] %>%
html_elements("tbody tr td:nth-child(3) a") %>%
html_attr("href")
# Stage types mapping
stageTypes <- data.frame(
stageType = c(" Flat","Hills, flat finish","Hills, uphill finish","Mountains, flat finish","Mountains, uphill finish"),
stageTypeCode = c("p1","p2","p3","p4","p5")
)
# Haal de type codes van de etappes op
stageTypeCodes <- tables[[1]] %>%
html_elements(".profile") %>%
html_attr("class") %>%
discard(~ str_detect(.x, " p ")) %>%
str_remove_all("icon profile | mg_rp4") %>%
str_trim()
stages <- stages %>%
filter(Date != "") %>%   # somrij eruit
mutate(
stage_id    = stage_ids,
stage_nr    = str_extract(`#`, "\\d+"),
date        = as.Date(glue::glue("{Date}/2025")),
departure   = Departure,
arrival     = Arrival,
stage_type = plyr::mapvalues(stageTypeCodes, stageTypes$stageTypeCode, stageTypes$stageType, warn_missing = FALSE),
distance_km = as.numeric(str_replace(Distance, ",", ".")),
vertical_m  = as.numeric(str_replace(`Vertical meters`, ",", "."))
) %>%
select(stage_id, date, stage_nr, stage_type, departure, arrival, distance_km, vertical_m)
# Tweede tabel = hardest stages
hardest_df <- tables[[2]] %>%
html_table(fill = TRUE) %>%
`colnames<-`(c("stage_rank", "stage_name", "profile_score"))
hardest_ids <- tables[[2]] %>%
html_elements("tbody tr td:nth-child(2) a") %>%
html_attr("href")
hardest <- hardest_df %>%
mutate(
stage_id = hardest_ids,
profile_score = as.numeric(str_extract(.[[3]], "\\d+"))
) %>%
select(stage_id, profile_score)
# ---- Joinen ----
result <- stages %>%
left_join(hardest, by = "stage_id") %>%
arrange(as.numeric(stage_nr))
print(result)
library(tidyverse)
library(rvest)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
html <- page
# ---- Alle tabellen pakken ----
tables <- html %>% html_elements("table")
# Eerste tabel = stages
stages_df <- tables[[1]] %>%
html_table(fill = TRUE, header = TRUE)
# Lege kolom verwijderen
stages_df <- stages_df[, colnames(stages_df) != ""]
stages <- as_tibble(stages_df)
# Stage_id toevoegen uit href
stage_ids <- tables[[1]] %>%
html_elements("tbody tr td:nth-child(3) a") %>%
html_attr("href")
# Stage types mapping
stageTypes <- data.frame(
stageType = c(" Flat","Hills, flat finish","Hills, uphill finish","Mountains, flat finish","Mountains, uphill finish"),
stageTypeCode = c("p1","p2","p3","p4","p5")
)
# Haal de type codes van de etappes op
stageTypeCodes <- tables[[1]] %>%
html_elements(".profile") %>%
html_attr("class") %>%
discard(~ str_detect(.x, " p ")) %>%
str_remove_all("icon profile | mg_rp4") %>%
str_trim()
stages <- stages %>%
filter(Date != "") %>%   # somrij eruit
mutate(
stage_id    = stage_ids,
stage_nr    = str_extract(`#`, "\\d+"),
date        = as.Date(glue::glue("{Date}/2025", "%d/%m/%Y")),
departure   = Departure,
arrival     = Arrival,
stage_type = plyr::mapvalues(stageTypeCodes, stageTypes$stageTypeCode, stageTypes$stageType, warn_missing = FALSE),
distance_km = as.numeric(str_replace(Distance, ",", ".")),
vertical_m  = as.numeric(str_replace(`Vertical meters`, ",", "."))
) %>%
select(stage_id, date, stage_nr, stage_type, departure, arrival, distance_km, vertical_m)
# Tweede tabel = hardest stages
hardest_df <- tables[[2]] %>%
html_table(fill = TRUE) %>%
`colnames<-`(c("stage_rank", "stage_name", "profile_score"))
hardest_ids <- tables[[2]] %>%
html_elements("tbody tr td:nth-child(2) a") %>%
html_attr("href")
hardest <- hardest_df %>%
mutate(
stage_id = hardest_ids,
profile_score = as.numeric(str_extract(.[[3]], "\\d+"))
) %>%
select(stage_id, profile_score)
# ---- Joinen ----
result <- stages %>%
left_join(hardest, by = "stage_id") %>%
arrange(as.numeric(stage_nr))
print(result)
library(tidyverse)
library(rvest)
page <- read_html(glue::glue("https://www.procyclingstats.com/race/vuelta-a-espana/2025/route/stages"))
html <- page
# ---- Alle tabellen pakken ----
tables <- html %>% html_elements("table")
# Eerste tabel = stages
stages_df <- tables[[1]] %>%
html_table(fill = TRUE, header = TRUE)
# Lege kolom verwijderen
stages_df <- stages_df[, colnames(stages_df) != ""]
stages <- as_tibble(stages_df)
# Stage_id toevoegen uit href
stage_ids <- tables[[1]] %>%
html_elements("tbody tr td:nth-child(3) a") %>%
html_attr("href")
# Stage types mapping
stageTypes <- data.frame(
stageType = c(" Flat","Hills, flat finish","Hills, uphill finish","Mountains, flat finish","Mountains, uphill finish"),
stageTypeCode = c("p1","p2","p3","p4","p5")
)
# Haal de type codes van de etappes op
stageTypeCodes <- tables[[1]] %>%
html_elements(".profile") %>%
html_attr("class") %>%
discard(~ str_detect(.x, " p ")) %>%
str_remove_all("icon profile | mg_rp4") %>%
str_trim()
stages <- stages %>%
filter(Date != "") %>%   # somrij eruit
mutate(
stage_id    = stage_ids,
stage_nr    = str_extract(`#`, "\\d+"),
date        = as.Date(glue::glue("{Date}/2025"), format = "%d/%m/%Y"),
departure   = Departure,
arrival     = Arrival,
stage_type = plyr::mapvalues(stageTypeCodes, stageTypes$stageTypeCode, stageTypes$stageType, warn_missing = FALSE),
distance_km = as.numeric(str_replace(Distance, ",", ".")),
vertical_m  = as.numeric(str_replace(`Vertical meters`, ",", "."))
) %>%
select(stage_id, date, stage_nr, stage_type, departure, arrival, distance_km, vertical_m)
# Tweede tabel = hardest stages
hardest_df <- tables[[2]] %>%
html_table(fill = TRUE) %>%
`colnames<-`(c("stage_rank", "stage_name", "profile_score"))
hardest_ids <- tables[[2]] %>%
html_elements("tbody tr td:nth-child(2) a") %>%
html_attr("href")
hardest <- hardest_df %>%
mutate(
stage_id = hardest_ids,
profile_score = as.numeric(str_extract(.[[3]], "\\d+"))
) %>%
select(stage_id, profile_score)
# ---- Joinen ----
result <- stages %>%
left_join(hardest, by = "stage_id") %>%
arrange(as.numeric(stage_nr))
print(result)
